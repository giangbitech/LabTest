@model BiTech.LabTest.Models.ViewModels.Teacher.TestInformationViewModel

<div class="container body-content">
    <div class="new-test-container">
        <div id="choose-source-container" class="choose-source-container @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.OnWorking) ? "test-on-process" : "")">
            <div class="get-data-caption"><center><h2>@LanguageConfig.Dictionary["Teacher_Where_To_Get_Test"]</h2></center></div>
            <div class="row">
                <div class="col-md-6 col-md-offset-3 choose-source-body">
                    <div class="brower-filedata-container">
                        <div>
                            <center>
                                <a href="#" id="BrowseButton" class="btn btn-primary btn-lg btn-browse-filedata">
                                    @{
                                        if (string.IsNullOrEmpty(Model.TestData))
                                        {
                                            @LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"];
                                        }
                                        else
                                        {
                                            @LanguageConfig.Dictionary["Teacher_Choose_Another_File"];
                                        }
                                    }
                                </a>
                            </center>
                            <input type="file" name="FileData" id="FileData" style="display: none;">
                            <div id="progressOuter" class="progress progress-striped active" style="display:none;">
                                <div id="progressBar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                            </div>
                            <div id="UploaderMessageBox" class="alert-danger panel-danger uploader-message-box"></div>
                        </div>
                        <div>
                            <center><a href="#" class="btn btn-primary btn-lg btn-browse-filedata">@LanguageConfig.Dictionary["Teacher_Get_Test_From_Online"]</a></center>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="new-test-information-container" class="new-test-information-container  @((string.IsNullOrEmpty(Model.TestData)) ? "" : "active")">
            <div class="get-data-caption"><center><h2>@LanguageConfig.Dictionary["Teacher_Test_Data_Information"]</h2></center></div>
            <div class="row">
                <div class="col-md-6 col-md-offset-3 choose-source-container">
                    <div class="brower-filedata-container">
                        @{
                            var testTitle = "";

                            if (Model.Subject.Length > 0 && Model.Grade.Length > 0)
                            {
                                testTitle = Model.Subject + " - " + Model.Grade;
                            }
                        }
                        <center><h4 id="test-title">@testTitle</h4></center>

                        @foreach (var item in Model.QuestionGroups)
                        {
                            <div>
                                <center>
                                    <table class="table table-striped table-bordered">
                                        <tr>
                                            <td colspan="2">@item.Title</td>
                                        </tr>
                                        <tr>
                                            <td>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_Quiz"]</td>
                                            <td>@item.TotalQuiz</td>
                                        </tr>
                                        <tr>
                                            <td>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_Underline"]</td>
                                            <td>@item.TotalUnderline</td>
                                        </tr>
                                        <tr>
                                            <td>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_Fill"]</td>
                                            <td>@item.TotalFill</td>
                                        </tr>
                                        <tr>
                                            <td>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_TrueFalse"]</td>
                                            <td>@item.TotalTrueFalse</td>
                                        </tr>
                                        <tr>
                                            <td>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_Matching"]</td>
                                            <td>@item.TotalMatching</td>
                                        </tr>
                                        <tr>
                                            <td><b>@LanguageConfig.Dictionary["Teacher_Test_Data_Information_Total"]</b></td>
                                            <td><b>@item.TotalAllQuestion</b></td>
                                        </tr>
                                    </table>
                                </center>
                            </div>
                        }
                      
                        <div>
                            <div id="start-test-container" class="start-test-container @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
                                <center>
                                    <a id="StartTestButton" class="btn btn-danger btn-lg btn-browse-filedata has-spinner start-test-button"
                                       href="~/Teacher/StartTest"
                                       data-ajax="true"
                                       data-ajax-method="post"
                                       data-ajax-confirm="@LanguageConfig.Dictionary["Teacher_Open_Test_Confirm"]"
                                       data-ajax-begin="startTestBegin"
                                       data-ajax-success="startTestSuccess">
                                        <i class='glyphicon glyphicon-refresh  fast-right-spinner'></i>
                                        @LanguageConfig.Dictionary["Teacher_Open_Test"]
                                    </a>
                                </center>
                            </div>
                            <div id="test-tracking-timer" class="test-tracking-timer @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.OnWorking) ? "active" : "")">
                                dhasljdhasld
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="waiting-wrapper color-wrapper">
    <div class="total-waiting-label">
        <center>@LanguageConfig.Dictionary["Teacher_Test_Data_Total_Student_Received"]</center>
    </div>
    <div class="total-waiting-student-wrapper">
        <center id="TotalJoinedStudents">7</center>
    </div>

    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            <div>
                <em style="background-color: #ed561b; "></em> Đang chờ thi
            </div>
            <div>
                <em style="background-color: #4285f4; "></em> Đang thi
            </div>
            <div>
                <em style="background-color: #50b432; "></em> Đã thi xong
            </div>
            <table class="realtime-statistics-table">
                <tr>
                    <td id="Waiting" class="waiting" style="width: 20%">20 người</td>
                    <td id="Working" class="working" style="width: 60%">50 người</td>
                    <td id="Finish" class="finish" style="width: 30%">30 người</td>
                </tr>
            </table>
        </div>
    </div>
</div>

@{
    List<dynamic> studentList = new List<dynamic>();

    #region Mockup data
    studentList.Add(new
    {
        Name = "Nguyễn Trường Giang",
        Result = 0,
        Status = "Chờ thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Nhanh",
        Result = 0,
        Status = "Đang thi. Còn 15 phút 40 giây"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "5.6",
        Status = "Đã hoàn thành bài thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "8.6",
        Status = "Đã hoàn thành bài thi. Còn dư 5 phút"
    });
    studentList.Add(new
    {
        Name = "Nguyễn Trường Giang",
        Result = 0,
        Status = "Chờ thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Nhanh",
        Result = 0,
        Status = "Đang thi. Còn 15 phút 40 giây"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "5.6",
        Status = "Đã hoàn thành bài thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "8.6",
        Status = "Đã hoàn thành bài thi. Còn dư 5 phút"
    });
    studentList.Add(new
    {
        Name = "Nguyễn Trường Giang",
        Result = 0,
        Status = "Chờ thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Nhanh",
        Result = 0,
        Status = "Đang thi. Còn 15 phút 40 giây"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "5.6",
        Status = "Đã hoàn thành bài thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "8.6",
        Status = "Đã hoàn thành bài thi. Còn dư 5 phút"
    });
    studentList.Add(new
    {
        Name = "Nguyễn Trường Giang",
        Result = 0,
        Status = "Chờ thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Nhanh",
        Result = 0,
        Status = "Đang thi. Còn 15 phút 40 giây"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "5.6",
        Status = "Đã hoàn thành bài thi"
    });

    studentList.Add(new
    {
        Name = "Cháu chú Sáu",
        Result = "8.6",
        Status = "Đã hoàn thành bài thi. Còn dư 5 phút"
    });
    #endregion
}

<div class="container body-content">
    <div>
        <table id="StudentList" class="table table-bordered table-striped">
            <caption><h2>Danh sách thí sinh</h2></caption>
            <thead>
                <tr>
                    <th width="30px">
                        <center>
                            STT
                        </center>
                    </th>
                    <th>
                        Họ Tên
                    </th>
                    <th>
                        <center>Điểm số</center>
                    </th>
                    <th>
                        Trạng thái
                    </th>
                </tr>
            </thead>
            <tbody>

                @{
                    var orderNumber = 1;
                    foreach (var item in studentList)
                    {
                        <tr>
                            <td>
                                <center>@orderNumber</center>
                            </td>
                            <td>
                                @item.Name
                            </td>
                            <td>
                                <center>@item.Result</center>
                            </td>
                            <td>
                                @item.Status
                            </td>
                        </tr>
                        orderNumber += 1;
                    }
                }
            </tbody>
        </table>
    </div>
    <table class="table table-bordered table-striped">
        <caption><h2>Bảng Phổ Điểm</h2></caption>
        <tr>
            <td><center>1</center></td>
            <td><center>2</center></td>
            <td><center>3</center></td>
            <td><center>4</center></td>
            <td><center>5</center></td>
            <td><center>6</center></td>
            <td><center>7</center></td>
            <td><center>8</center></td>
            <td><center>9</center></td>
            <td><center>10</center></td>
        </tr>
        <tr>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>0%</center></td>
            <td><center>1%</center></td>
        </tr>
        <tr>
            <td colspan="4"><center>1 - 4.9</center></td>
            <td colspan="3"><center>5-7.9</center></td>
            <td colspan="3"><center>8-10</center></td>
        </tr>
    </table>
</div>

<div class="color-wrapper">
    <center>
        <input type="button" name="name" class="btn btn-danger btn-lg" value="Kết thúc bài thi" />
        <input type="button" name="name" class="btn btn-primary btn-lg" value="Tải kết quả thi" />
    </center>
</div>

@section scripts{
    <script src="~/bower_components/Simple-Ajax-Uploader-master/SimpleAjaxUploader.min.js"></script>
    <script>

        // Declare a proxy to reference the hub.
        var chat = $.connection.testHub;
        // Create a function that the hub can call to broadcast messages.
        chat.client.broadcastMessage = function (name, message) {

        };

        // Start the connection.
        $.connection.hub.start().done(function () { });

        function startTestBegin() {
            $(this).addClass('active');
        };

        function startTestSuccess(response) {
            // Ẩn khung chọn bài thi
            $("#choose-source-container").hide();
            // Hiện khung đồng hồ đếm giờ thi
            $("#test-tracking-timer").show();
            // Ẩn nút tình giờ thi
            $("#start-test-container").hide();


            $(this).removeClass('active');

            var resultInJson = JSON.parse(response);

            if (response.success = "1") {
                alert(resultInJson.testId)
            }
            else {
                alert("lỗi")
            }

            chat.server.teacherAnnounceTestOpened(resultInJson.testId);
        };

        $(document).ready(function () {
            $('#StudentList').DataTable({
                "paging": false,
                "language": {
                    "sProcessing": "Đang xử lý...",
                    "sLengthMenu": "Xem _MENU_ mục",
                    "sZeroRecords": "Không tìm thấy dòng nào phù hợp",
                    "sInfo": "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
                    "sInfoEmpty": "Đang xem 0 đến 0 trong tổng số 0 mục",
                    "sInfoFiltered": "(được lọc từ _MAX_ mục)",
                    "sInfoPostFix": "",
                    "sSearch": "Tìm:",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "Đầu",
                        "sPrevious": "Trước",
                        "sNext": "Tiếp",
                        "sLast": "Cuối"
                    }
                }
            });



        });

        function escapeTags(str) {
            return String(str)
                     .replace(/&/g, '&amp;')
                     .replace(/"/g, '&quot;')
                     .replace(/'/g, '&#39;')
                     .replace(/</g, '&lt;')
                     .replace(/>/g, '&gt;');
        }

        window.onload = function () {
            var btn = document.getElementById('BrowseButton'),
              progressBar = document.getElementById('progressBar'),
              progressOuter = document.getElementById('progressOuter'),
              msgBox = document.getElementById('UploaderMessageBox');

            var uploader = new ss.SimpleUpload({
                button: btn,
                url: '@Url.Content("~/Teacher/UploadTestData")',
                name: 'uploadfile',
                multipart: true,
                hoverClass: 'hover',
                focusClass: 'focus',
                responseType: 'json',
                startXHR: function () {
                    progressOuter.style.display = 'block'; // make progress bar visible
                    this.setProgressBar(progressBar);
                },
                onSubmit: function () {
                    msgBox.innerHTML = ''; // empty the message box
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Test_Uploading"]'; // change button text to "Uploading..."
                },
                onComplete: function (filename, response) {
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Choose_Another_File"]';
                    progressOuter.style.display = 'none'; // hide progress bar when upload is completed

                    if (!response) {
                        msgBox.innerHTML = '<div class="inner-container">@Html.Raw(LanguageConfig.Dictionary["Teacher_Upload_Error_2"])</div>';
                        btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                        return;
                    }

                    if (response.status == "OK") {
                        $("#test-title").html(response.subject + " - " + response.grade);

                        // Hiện khung thông tin bài thi đã chọn
                        var informationContainer = $("#new-test-information-container");
                        if (informationContainer.css('display') == "none") {
                            informationContainer.fadeToggle();
                        }
                    }
                    else {
                        msgBox.innerHTML = '<div class="inner-container">@Html.Raw(LanguageConfig.Dictionary["Teacher_Upload_Error_3"])</div>';
                        btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                    }
                },
                onError: function (xhr) {
                    progressOuter.style.display = 'none';
                    msgBox.innerHTML = '<div class="inner-container">@Html.Raw(@LanguageConfig.Dictionary["Teacher_Upload_Error_1"])</div>';
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                }
            });



        };
    </script>
}