@model BiTech.LabTest.Models.ViewModels.Teacher.TestInformationViewModel
@{
    var testTitle = "";

    // Tên môn thi
    if (Model.Subject.Length > 0)
    {
        testTitle = Model.Subject;
    }

    // khối lớp
    if (Model.Grade.Length > 0)
    {
        testTitle = testTitle + " - " + Model.Grade;
    }

    // Bổ sung loại hình thi, Thi HK, thi 1 tiết .v.v.v
    if (string.IsNullOrEmpty(Model.Type) == false)
    {
        testTitle = Model.Type + " " + testTitle;
    }

    // Bổ sung năm học thi
    if (string.IsNullOrEmpty(Model.Year) == false)
    {
        testTitle = testTitle + " (" + Model.Year + ")";
    }

}
@Html.HiddenFor(m => m.TestId);
<div id="main-test-title-container" class="main-test-title-container @((Model.TestStep != BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
    <center><h2 id="main-test-title">@testTitle</h2></center>
</div>
<div class="container body-content">
    <div class="new-test-container @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
        <div id="choose-source-container" class="choose-source-container">
            <div class="get-data-caption"><center><h2>@LanguageConfig.Dictionary["Teacher_Where_To_Get_Test"]</h2></center></div>
            <div class="row">
                <div class="col-md-6 col-md-offset-3 choose-source-body">
                    <div class="brower-filedata-container">
                        <div>
                            <center>
                                <a href="#" id="BrowseButton" class="btn btn-primary btn-lg btn-browse-filedata">
                                    @{
                                        if (string.IsNullOrEmpty(Model.TestData))
                                        {
                                            @LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"];
                                        }
                                        else
                                        {
                                            @LanguageConfig.Dictionary["Teacher_Choose_Another_File"];
                                        }
                                    }
                                </a>
                            </center>
                            <input type="file" name="FileData" id="FileData" style="display: none;">
                            <div id="progressOuter" class="progress progress-striped active" style="display:none;">
                                <div id="progressBar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                            </div>
                            <div id="UploaderMessageBox" class="alert-danger panel-danger uploader-message-box"></div>
                        </div>
                        <div>
                            <center><a href="#" class="btn btn-primary btn-lg btn-browse-filedata">@LanguageConfig.Dictionary["Teacher_Get_Test_From_Online"]</a></center>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="new-test-information-container" class="new-test-information-container  @((string.IsNullOrEmpty(Model.TestData)) ? "" : "active")">
            <div class="get-data-caption"><center><h2>@LanguageConfig.Dictionary["Teacher_Test_Data_Information"]</h2></center></div>
            <div class="row">
                <div class="col-md-6 col-md-offset-3 choose-source-container">
                    <div class="brower-filedata-container">
                        <center><h4 id="test-title">@testTitle</h4></center>
                        <div id="doing-test-time" class="doing-test-time">@Html.Raw(String.Format(@LanguageConfig.Dictionary["Teacher_Test_Total_Minutes"], Model.TotalMinutes))</div>
                        <div id="test-data-group-statistics">
                            @Html.Partial("_TestDataGroupStatistic", Model.QuestionGroups)
                        </div>
                        <div>
                            <div id="start-test-container" class="start-test-container @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
                                <div id="doing-test-time" class="doing-test-time">@Html.Raw(String.Format(@LanguageConfig.Dictionary["Teacher_Test_Total_Minutes"], Model.TotalMinutes))</div>
                                <center>
                                    <div id="StartTestMessageBox" class="alert-danger panel-danger uploader-message-box"></div>
                                    <a id="StartTestButton" class="btn btn-danger btn-lg btn-browse-filedata has-spinner start-test-button"
                                       href="~/Teacher/StartTest"
                                       data-ajax="true"
                                       data-ajax-method="post"
                                       data-ajax-confirm="@LanguageConfig.Dictionary["Teacher_Open_Test_Confirm"]"
                                       data-ajax-begin="startTestBegin"
                                       data-ajax-success="startTestSuccess">
                                        <i class='glyphicon glyphicon-refresh  fast-right-spinner'></i>
                                        @LanguageConfig.Dictionary["Teacher_Open_Test"]
                                    </a>
                                </center>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div  ng-controller="StudentTrackingController">
    <div class="waiting-wrapper color-wrapper">
        <div class="container">
            <div class="row">
                <div id="student-number-tracker" class="col-md-6 @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "col-md-offset-3" : "")">
                    <div class="total-waiting-label">
                        <center>@LanguageConfig.Dictionary["Teacher_Test_Data_Total_Student_Received"]</center>
                    </div>
                    <div class="total-waiting-student-wrapper">
                        <center id="TotalJoinedStudents">{{statistics.totalOnlineStudent}}</center>
                    </div>
                    <div id="student-tracker-container">
                        <div>
                           <center>
                               <em style="background-color: #ed561b; "></em> @LanguageConfig.Dictionary["Teacher_Waiting_Test_Number"] &nbsp;&nbsp;&nbsp;

                               <em style="background-color: #4285f4; "></em> @LanguageConfig.Dictionary["Teacher_Doing_Test_Number"] &nbsp;&nbsp;&nbsp;

                               <em style="background-color: #50b432; "></em> @LanguageConfig.Dictionary["Teacher_Finished_Test_Number"] &nbsp;&nbsp;&nbsp;
                           </center>
                        </div>
                        <table class="realtime-statistics-table">
                            <tr>
                                <td id="Waiting" class="waiting" style="width: {{statistics.totalWaitingStudentPercent}}%">{{statistics.totalWaitingStudent}} @LanguageConfig.Dictionary["Teacher_Statistic_People_Label"]</td>
                                <td id="Working" class="working" style="width: {{statistics.totalDoingTestStudentPercent}}%">{{statistics.totalDoingTestStudent}} @LanguageConfig.Dictionary["Teacher_Statistic_People_Label"]</td>
                                <td id="Finish" class="finish" style="width: {{statistics.totalFinishedStudentPercent}}%">{{statistics.totalFinishedStudent}} @LanguageConfig.Dictionary["Teacher_Statistic_People_Label"]</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div id="test-time-tracker" class="col-md-6 test-time-tracker  @((Model.TestStep != BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
                    <div class="total-waiting-label">
                        <center>@LanguageConfig.Dictionary["Teacher_Remaining_Time"]</center>
                    </div>
                    <div id="remaining-timer" class="total-waiting-student-wrapper">
                        <center id="RemainingTimer"></center>
                        <input type="hidden" id="RemainingTestSeconds" value="" />
                    </div>
                    <div id="test-time-out" class="alert-danger test-time-out @((Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Finish) ? "active" : "")">@Html.Raw(LanguageConfig.Dictionary["Teacher_Test_Timeout"])</div>
                </div>
            </div>
        </div>
    </div>
    <div class="container body-content">
        <table id="StudentList" class="table table-bordered table-striped table-hover">
            <caption><h2>@LanguageConfig.Dictionary["Teacher_Student_List"]</h2></caption>
            <thead>
                <tr>
                    <th width="30px">
                        <center>
                            @LanguageConfig.Dictionary["Teacher_Order_Number"]
                        </center>
                    </th>
                    <th>
                        @LanguageConfig.Dictionary["Teacher_FullName"]
                    </th>
                    <th>
                        <center>@LanguageConfig.Dictionary["Teacher_Mark"]</center>
                    </th>
                    <th>
                        @LanguageConfig.Dictionary["Teacher_Status"]
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="student in students">
                    <td>
                        <center>{{student.OrderNumber}}</center>
                    </td>
                    <td>
                        {{student.FullName}}
                    </td>
                    <td>
                        <center>{{student.Mark}}</center>
                    </td>
                    <td>
                        {{student.TestStepDescription}}
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table table-bordered table-striped general-mark-table  @((Model.TestStep != BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
            <caption><h2>@LanguageConfig.Dictionary["Teacher_General_Table"]</h2></caption>
            <thead>
                <tr>
                    <th class="label-column">@LanguageConfig.Dictionary["Teacher_Scrore_Label_Statistics"]</th>
                    <th><center>0</center></th>
                    <th><center>1</center></th>
                    <th><center>2</center></th>
                    <th><center>3</center></th>
                    <th><center>4</center></th>
                    <th><center>5</center></th>
                    <th><center>6</center></th>
                    <th><center>7</center></th>
                    <th><center>8</center></th>
                    <th><center>9</center></th>
                    <th><center>10</center></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th class="label-column">@LanguageConfig.Dictionary["Teacher_Scrore_Total_Student_Label_Statistics"]</th>
                    <td><center>{{statistics.totalScore0}}</center></td>
                    <td><center>{{statistics.totalScore1}}</center></td>
                    <td><center>{{statistics.totalScore2}}</center></td>
                    <td><center>{{statistics.totalScore3}}</center></td>
                    <td><center>{{statistics.totalScore4}}</center></td>
                    <td><center>{{statistics.totalScore5}}</center></td>
                    <td><center>{{statistics.totalScore6}}</center></td>
                    <td><center>{{statistics.totalScore7}}</center></td>
                    <td><center>{{statistics.totalScore8}}</center></td>
                    <td><center>{{statistics.totalScore9}}</center></td>
                    <td><center>{{statistics.totalScore10}}</center></td>
                </tr>
                <tr>
                    <th class="label-column">@LanguageConfig.Dictionary["Teacher_Scrore_Total_Student_Percent_Label_Statistics"]</th>
                    <td colspan="5"><center>{{statistics.totalGroupScore1Percent}}</center></td>
                    <td colspan="3"><center>{{statistics.totalGroupScore2Percent}}</center></td>
                    <td colspan="3"><center>{{statistics.totalGroupScore3Percent}}</center></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<div class="color-wrapper end-test-container @((Model.TestStep != BiTech.LabTest.DAL.Models.TestData.TestStepEnum.Waiting) ? "active" : "")">
    <center>
        <a class="btn btn-danger btn-lg" onclick="confirm('@LanguageConfig.Dictionary["Teacher_End_Test_Confirm"]') return true;else return false;" href="@Url.Content("~/Teacher/EndTest")">@LanguageConfig.Dictionary["Teacher_End_Test_Button"]</a>
        <a class="btn btn-danger btn-lg btn-save-print-test">@LanguageConfig.Dictionary["Teacher_Print_Test"]</a>
    </center>
</div>

<a href="@Url.Content("~/Teacher/KeepSession")" data-ajax="true" data-ajax-method="post" id="keep-session-anchor"></a>

@section scripts{
<script src="~/bower_components/Simple-Ajax-Uploader-master/SimpleAjaxUploader.min.js"></script>
<script src="~/bower_components/angular/angular.min.js"></script>
<script src="~/Scripts/Teacher.js"></script>
    <script>
        studentTrackingData = [];
        testInformation = null;

        // Declare a proxy to reference the hub.
        var chat = $.connection.testHub;

        // Start the connection.
        $.connection.hub.start();

        function startTestBegin() {
            $(this).addClass('active');
        };

        function startTestSuccess(response) {
            if (response.success == "1") {
                $("#TestId").val(response.testId);

                // Hiện khung tên đề thi
                $("#main-test-title-container").show();

                // Ẩn khung chọn đề & thông tin đề
                $(".new-test-container").hide();

                // Hiện khung đồng hồ đếm giờ thi
                $("#test-tracking-timer").show();

                // Ẩn nút tình giờ thi
                $("#start-test-container").hide();

                // Dịch chuyển khung theo dõi só lượng
                $("#student-number-tracker").removeClass("col-md-offset-3");

                // Hiển thị khung đếm giờ
                $("#test-time-tracker").show();

                // Hiện thị khung thống kê điểm
                $(".general-mark-table").addClass('active');

                // Hiện thị khung kết thúc bài thi & in kêt quả
                $(".end-test-container").addClass('active');

                $(this).removeClass('active');

                countdown(response.remainingTestSeconds, document.getElementById("RemainingTimer"));

                // Request notify các clients bắt đầu thi
                chat.server.teacherAnnounceTestOpened(response.testId);
            }
            else {
                document.getElementById("StartTestMessageBox").innerHTML = '<div class="inner-container">@Html.Raw(@LanguageConfig.Dictionary["Teacher_Start_Test_Error"])</div>';
                $(this).removeClass('active');
            }
        };

        $(document).ready(function () {
            // Để giữ session, tạo kết nối mới đến MVC sau n phút....
            var keepSession = setInterval(function () {
                $("#keep-session-anchor").click();
            },1000*60);

            //$('#StudentList').DataTable({
            //    "paging": false,
            //    "language": {
            //        "sProcessing": "Đang xử lý...",
            //        "sLengthMenu": "Xem _MENU_ mục",
            //        "sZeroRecords": "Không tìm thấy dòng nào phù hợp",
            //        "sInfo": "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
            //        "sInfoEmpty": "Đang xem 0 đến 0 trong tổng số 0 mục",
            //        "sInfoFiltered": "(được lọc từ _MAX_ mục)",
            //        "sInfoPostFix": "",
            //        "sSearch": "Tìm:",
            //        "sUrl": "",
            //        "oPaginate": {
            //            "sFirst": "Đầu",
            //            "sPrevious": "Trước",
            //            "sNext": "Tiếp",
            //            "sLast": "Cuối"
            //        }
            //    }
            //});
        });

        function escapeTags(str) {
            return String(str)
                     .replace(/&/g, '&amp;')
                     .replace(/"/g, '&quot;')
                     .replace(/'/g, '&#39;')
                 .replace(/</g, '&lt;')
                     .replace(/>/g, '&gt;');
        }

        window.onload = function () {
            var btn = document.getElementById('BrowseButton'),
              progressBar = document.getElementById('progressBar'),
              progressOuter = document.getElementById('progressOuter'),
              msgBox = document.getElementById('UploaderMessageBox');

            var uploader = new ss.SimpleUpload({
                button: btn,
                url: '@Url.Content("~/Teacher/UploadTestData")',
                name: 'uploadfile',
                multipart: true,
                hoverClass: 'hover',
                focusClass: 'focus',
                responseType: 'json',
                startXHR: function () {
                    progressOuter.style.display = 'block'; // make progress bar visible
                    this.setProgressBar(progressBar);
                },
                onSubmit: function () {
                    $("#new-test-information-container").hide();
                    msgBox.innerHTML = ''; // empty the message box
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Test_Uploading"]'; // change button text to "Uploading..."
                },
                onComplete: function (filename, response) {
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Choose_Another_File"]';
                    progressOuter.style.display = 'none'; // hide progress bar when upload is completed

                    if (!response) {
                        msgBox.innerHTML = '<div class="inner-container">@Html.Raw(LanguageConfig.Dictionary["Teacher_Upload_Error_2"])</div>';
                        btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                        return;
                    }

                    if (response.status == "OK") {
                        testInformation = response;

                        var testTitle = "";

                        // Tên môn thi và khối lớp
                        if (response.subject.length > 0) {
                            testTitle = response.subject + " - ";
                        }

                        if (response.grade.length > 0) {
                            testTitle = testTitle + response.grade;
                        }

                        // Bổ sung loại hình thi, Thi HK, thi 1 tiết .v.v.v
                        if (response.type.length > 0) {
                            testTitle = response.type + " " + testTitle;
                        }

                        // Bổ sung năm học thi
                        if (response.year.length > 0) {
                            testTitle = testTitle + " (" + response.year + ")";
                        }
                        // Hiện thị môn thi và khối lớp thi
                        $("#test-title").html(testTitle);

                        $("#main-test-title").html(testTitle);

                        // Thời gian thi
                        $(".total-test-time-value").each(function () {
                            $(this).html(response.totalMinutes);
                        });

                        // Lấy thông in số lượng câu hỏi theo từng nhóm đề
                        $.get("@Url.Content("~/Teacher/GetUploadedTestInformation")", null, function (data) {
                            $("#test-data-group-statistics").html(data);
                        });

                        // Hiện khung thông tin bài thi đã chọn
                        var informationContainer = $("#new-test-information-container");
                        if (informationContainer.css('display') == "none") {
                            informationContainer.fadeToggle();
                        }
                    }
                    else {
                        msgBox.innerHTML = '<div class="inner-container">@Html.Raw(LanguageConfig.Dictionary["Teacher_Upload_Error_3"])</div>';
                        btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                    }
                },
                onError: function (xhr) {
                    progressOuter.style.display = 'none';
                    msgBox.innerHTML = '<div class="inner-container">@Html.Raw(@LanguageConfig.Dictionary["Teacher_Upload_Error_1"])</div>';
                    btn.innerHTML = '@LanguageConfig.Dictionary["Teacher_Get_Test_From_Device"]';
                }
            });
        };

        function countdown(seconds, element) {
            $("#RemainingTestSeconds").val(seconds);

            var interval = setInterval(function (element) {
                seconds = $("#RemainingTestSeconds").val();

                d = Number(seconds);
                var h = Math.floor(d / 3600);
                var m = Math.floor(d % 3600 / 60);
                var s = Math.floor(d % 3600 % 60);
                seconds -= 1;


                // Cập nhật số giây hiện có
                $("#RemainingTestSeconds").val(seconds);

                $(element).html( m + ':' + ((s < 10) ? "0" + s : s));

                // Hết giờ làm bài
                if (seconds == 0) {
                    // Phát âm thanh
                    $('<audio controls autoplay> <source src="@Url.Content("~/Content/bell.mp3")" type="audio/mpeg"> Your browser does not support the audio element. </audio>');
                    clearInterval(interval);

                    // Hiện khung thông báo hết giờ làm bài
                    $("#test-time-out").show();
                    // Ẩn đồng hồ đếm giờ
                    $("#remaining-timer").hide();
                }
            }, 1000, element);
        }

        @if (Model.RemainingTestSeconds > 0  && Model.TestStep == BiTech.LabTest.DAL.Models.TestData.TestStepEnum.OnWorking)
        {
            @:countdown(@Model.RemainingTestSeconds, document.getElementById("RemainingTimer"));
                                                        }
    </script>
}