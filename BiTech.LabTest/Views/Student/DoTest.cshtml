@using BiTech.LabTest.Models.ViewModels
@model Student.TestDataViewModel
<script>


</script>
<div id="timer" style="display: block; position: absolute;" class="timer-fix">
    <div class="form-clock">
        <form id="clock">
            <span> Thời gian còn lại: </span>

        </form>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <div class="row">
            <div class="col-md-4 col-md-offset-4 choose-source-body choose-source-container">
                <div>
                    <center>
                        <table class="table table-striped table-bordered">
                            <tr>
                                <td colspan="2">Trường @Model.SchoolName</td>
                                <td colspan="2">@Model.TestType</td>
                            </tr>
                            <tr>
                                <td colspan="2">Năm học @Model.Year</td>
                                <td colspan="2"> @Model.Grade</td>
                            </tr>
                            <tr>
                                <td colspan="2">Môn @Model.Subject</td>
                                <td colspan="2">Thời gian thi @Model.TestTime phút</td>
                            </tr>
                            <tr>
                                <td colspan="2">@Model.StudentName</td>
                                <td colspan="2">Lớp @Model.StudentClass</td>
                            </tr>
                        </table>
                        @Model.StudentIPAdd
                    </center>
                </div>
            </div>
        </div>
        <div class="get-data-caption"><center><h2>@LanguageConfig.Dictionary["Student_Welcome"]</h2></center></div>
        <div id="MessageBox" class="alert-danger panel-danger uploader-message-box"></div>
        <div id="TestArea" class="row">
            @using (Html.BeginForm("DoneTest", "Student", FormMethod.Post, new { id = "DoTestForm" }))
            {
                @Html.HiddenFor(m => m.Base64Code);
                @*Chọn phần thi - Test Group Choosing*@
                <div class="col-md-6 col-md-offset-3">
                    <table class="table table-striped table-bordered">
                        <tr>
                            @foreach (var testGroup in Model.TestGroupList)
                            {
                                if (testGroup.isForAll)
                                {
                                    <td colspan="2">
                                        <label>@testGroup.Title</label>
                                    </td>
                                }
                            }
                            @foreach (var testGroup in Model.TestGroupList)
                            {
                                if (!testGroup.isForAll)
                                {
                                    <td colspan="2">

                                        @Html.RadioButtonFor(m => m.TestGroupChoose, testGroup.Title)
                                        <!--input type="radio" name="TestGroupChoose" id="opt-testGroup.Title" value="testGroup.Title">-->
                                        <label>@testGroup.Title</label>
                                    </td>
                                }
                            }
                        </tr>
                    </table>
                </div>

                @*Nội dung thi - Test*@

                <div class="col-md-6 col-md-offset-3">
                    <div class="">
                        <div>

                            <!--Xuất từng phần-->
                            @foreach (var gvm in Model.TestGroupList)
                            {
                                <div class="do-test-testGroup-div ">
                                    <div>
                                        <h2>@gvm.Title</h2>
                                    </div>
                                    @*Xuất trắc nghiệm - print quiz*@
                                    @foreach (var qvm in gvm.QuestionsList)
                                    {
                                        <div>
                                            @switch ((qvm as Student.QuestionObjectViewModel).QuestionType)
                                            {
                                                case Student.QuestionTypeEnum.Quiz:
                                                case Student.QuestionTypeEnum.Underline:
                                                    Html.RenderPartial("_TracNghiem1LuaChon", (Student.SingleQuestion_String_OneChoice_ViewModel)qvm);
                                                    break;
                                                case Student.QuestionTypeEnum.QuizN:
                                                case Student.QuestionTypeEnum.TrueFalse:
                                                    Html.RenderPartial("_TracNghiemNhieuLuaChon", (Student.SingleQuestion_Bool_MultiChoices_ViewModel)qvm);
                                                    break;
                                                case Student.QuestionTypeEnum.Matching:
                                                case Student.QuestionTypeEnum.Fill:
                                                    break;
                                                case Student.QuestionTypeEnum.Group:
                                                    break;

                                            }
                                        </div>

                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6 col-md-offset-3">
                        <center>
                            <input id="btnDoneTest" type="submit" value="@LanguageConfig.Dictionary["Student_Done_Test"]"
                                   class="btn btn-primary btn-lg">
                        </center>
                    </div>

                </div>
            }
        </div>
    </div>
</div>
@ViewBag.StudentIPAdd

@using (Ajax.BeginForm("DoneTestX", "Student", null, new AjaxOptions { OnSuccess = "NhanDeThiThanhCong" }, new { id = "DoTestForm" }))
{

    <input id="btnDoneTestx" type="submit" value="@LanguageConfig.Dictionary["Student_Done_Test"]"
           class="btn btn-primary btn-lg">
}

<script>
    function NhanDeThiThanhCong(response) {
    }
</script>

@section scripts{
    <script>
        function ThanhCong(response) {
        }
    </script>
}